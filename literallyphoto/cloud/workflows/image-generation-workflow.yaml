main:
  params: [args]
  steps:
    - init:
        assign:
            - userId: ${args.userId}
            - targetId: ${args.targetId}
            - imagePrompt: ${args.imagePrompt}
            - weightsUrl: ${args.weightsUrl}
            - generationId: ${args.generationId}
            - docName: ${args.docName}
            - bookKeeperUrl: ${sys.get_env("BOOKKEEPER_SERVICE_URL")}
            - error: null
    - try_catch_image_generation:
        try:
            steps:
                - gen_images:
                    call: http.post
                    args:
                        url: ${sys.get_env("IMAGE_GEN_SERVICE_URL") + "/generate_images"}
                        body:
                            weightsUrl: ${weightsUrl}
                            userId: ${userId}
                            targetId: ${targetId}
                            imagePrompt: ${imagePrompt}
                          generationId: ${generationId}
                        auth:
                            type: OIDC
                    result: image_gen_response
                - assign_result:
                    assign:
                        - images: ${image_gen_response.body.result}
                - record_success:
                    call: http.post
                    args:
                        url: ${bookKeeperUrl + "/record_images_completed"}
                        body:
                            document_path: ${args.docName}
                            images: ${images}
                        auth:
                            type: OIDC
        except:
            as: e
            steps:
                - assign_error:
                    assign:
                        - error: ${e}
    - check_error:
        switch:
            - condition: ${error != null}
              next: raise_again
        next: return_result
    - raise_again:
        raise: ${error}
    - return_result:
        return:
            images: ${images}